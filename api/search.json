[{"id":"0f41995ef31bfb7e58714b93dded2b02","title":"利用microsoft azure搭建一个神奇的魔法门","content":"\n\n\n\n\n\n\n注意\n写于2022年8月26日，注意你的azure账号必须有资格使用免费服务，可以用github学生包来获取学生认证，有100美元的试用金，还有如首次绑定信用卡，有200美元的试用金，或者你有msdn，mpn订阅也均可。\n\n开始部署1,创建虚拟机实例1，打开微软azure的官网：https://portal.azure.com/#home\n2，创建一个虚拟机实例大致设置如下：\n\n这里主要注意基本项,磁盘项,都选择免费用例，且无论你之前用没用过Debian，这里都要选择Debian，方便后续操作。\n最后查看与创建会让你填写手机号码\n2,域名绑定1,\n在域名解析处，主机记录填写自定义的子域名，记录类型为a，记录值填写虚拟机分配的ip，开启解析即可，大约10分钟左右生效。\n2,关于虚拟机的详细情况，可以找到，仪表盘—&gt;虚拟机，选择你想了解的双击即可。\n找到，虚拟机-&gt;网络，添加入站端口规则\n如下图所示设置\n出站规则也如此设置\n3,ssh与本地连接我使用的是Xshell，其他的其实也类似，使用方法，大同小异，你用你习惯的ssh客户端即可。\n\n大致设置如上图即可，（我用的密码连接）双击新建好的会话，出现你设置的用户名@你的虚拟机名：,就说明连接上了\n4,输入命令1:开启root登入\nsudo -i\n\n2:开启防火墙\niptables -P INPUT ACCEPT\niptables -P FORWARD ACCEPT\t\niptables -P OUTPUT ACCEPT\niptables -F\napt-get purge netfilter-persistent\n//一行一条命令\n\n重启,手动重启也行\nreboot\n\n3：申请SSL证书\napt update -y       # Debian/Ubuntu 命令\napt install -y curl   # Debian/Ubuntu 命令\napt install -y socat  # Debian/Ubuntu 命令\n//一行一条命令\n\n\n替换为你经常使用的邮箱\ncurl https://get.acme.sh | sh\n~/.acme.sh/acme.sh --register-account -m xxxxxxx@xxx.com\n//一行一条命令\n\n设置你要申请ssl证书的域名,改变你的解析域（在dns解析绑定虚拟机ip的那个子域名）\n~/.acme.sh/acme.sh --issue -d xxx.xxx.com --standalone\n\n更换你的解析域名，此步完成后会在VPS root目录下\n~/.acme.sh/acme.sh --installcert -d naiyou.naiyoubbq.xyz --key-file /root/private.key --fullchain-file /root/cert.crt\n\n4：安装X-ui面板bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)\n\n注意上图此处的端口号和密码账号\n以相应的ip或者绑定的域名，以及相应的端口打开这个网页后，输入密码账号\n\n打开面板设置端口可以自定义公钥&#x2F;root&#x2F;cert.crt验证文件&#x2F;root&#x2F;private.key填入下图相应处注意，最好更改用户设置的相关信息，为了安全起见\n保存以上设置后，请重启面板然后重新打开，找到入站列表，点加号,如下图所设置，点击添加即可\n\n然后,点击详细信息查看，复制链接，此链接即可在粘贴板导入V2ray客户端上，基本就完成的魔法门的搭建\n5,V2rayN使用V2rayN 下载地址：https://github.com/2dust/v2rayN/releases\n1：在V2rayN中，右键从剪切板导入后，我们点击 设置-&gt;参数设置-&gt;V2rayN设置—core类型选择Xray core\n\n6,（可选，注意不适合Ubuntu）BBR加速可能搭好后的网速并没有那么快，你可以选择安装一些加速模块，比如这个BBR，当然你可以选择不加。\n命令行\nwget -N --no-check-certificate \"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\" &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh\n\n\n看见选择面板后，选择2，回车。\n当如上图所示时，方向键控制，选no，回车\n加载完成后我们选择重启。\n重新输入命令行\nwget -N --no-check-certificate \"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\" &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh\n\n\n看到上图中BBR plus已经安装后，此时选择7，回车即可获得加速。\n7,结尾因为其敏感性，最好私下部署，个人或熟人使用。以管理员身份-打开cmd，配置路径\n","slug":"利用Microsoft azure搭建一个神奇的魔法门","date":"2022-08-26T14:33:56.000Z","categories_index":"","tags_index":"vps","author_index":"叁鄉浪子"},{"id":"82baf38f8cf493eea7decbb88b4515da","title":"申请微软E5开发者订阅","content":"\n\n\n\n\n\n\n注意\n写于2022年8月6号\n\n Microsoft 365 开发人员计划免费 Microsoft 365 E5 即时沙盒\n\n将配置时间从天数缩短到秒。在完全预配的沙盒订阅上，你可以做自己的管理员并构建应用和解决方案的原型。\n\n包括 25 个用于开发目的的用户许可证\n旁加载 Teams 预配置应用\n包含 16 个示例用户、用户数据和内容的完整加载示例数据，可帮助你为解决方案建模。\n轻松访问预配置的核心 Microsoft 365 工作负载和功能（不包括 Windows），包括：\n\n所有 Office 365 应用 \n开发 Power Platform 所需的一切\nOffice 365 高级威胁防护 \nPower BI 高级分析\n用于合规性和信息保护的企业移动性 + 安全性 (EMS)\n用于构建高级标识和访问管理解决方案的 Azure Active Directory\n\n\n\n\n\n开工前言Office365开发版E5是为开发人员提供的，是微软的官方活动，申请Office 365开发者计划可以获得为期3个月的免费Office365 E5。而E5计划就包含了25个用于所有Office 365 应用的许可证。如果嫌正版office365贵的话，这可是你免费获取office的好机会了。\n申请账号1.访问申请链接，点击 立即加入开始申请账号\n2.登录账号\n3.注册Office 365 开发人员。下面两个勾选可以只勾选第一个，减少广告，点击 下一步继续\n4.随便填一下，点击 加入\n5.之后的页面中会提示你没有订阅，点击申请一个订阅。在弹出的页面中输入一个你能记得住的用户名和域，然后记住你的”用户名@域.onmicrosoft.com”，点继续。\n\n6.验证手机号，这一步会调用谷歌的验证系统，准备好科学上网工具，建议使用谷歌浏览器。\n\n7.现在，我们已经申请好了E5订阅了，并一次性申请了25个用户许可证。如果你只是自己用，现在已经可以使用”用户名@域.onmicrosoft.com”和之前设置的密码登录你电脑上的Office了。\n\n\n设置5T网盘容量默认onedrive容量是1T，但是可以通过设置更改为5T。1.点击365主页的onedrive图标，若提示“我们目前还在 OneDrive 上设置文件”可以先跳过本步骤，先完成下面的操作。\n2.打开 https://admin.onedrive.com/?v=StorageSettings ，也可以在 管理中心——所有管理中心——onedrive中找到，更改默认存储为5012GB。\n\n","slug":"申请微软E5开发者订阅","date":"2022-08-06T20:13:49.000Z","categories_index":"","tags_index":"服务器","author_index":"叁鄉浪子"},{"id":"9826335fc4e244a28925e3b0c630fdd7","title":"hexo+aurora+github搭建","content":"\n\n\n\n\n\n\n注意\n写于2022年7月15日\n\n1 node js的安装及环境配置（由Ryan Dahl开发，是一个基于Chrome V8引擎的JavaScript运行环境，\n使用了一个事件驱动、非阻塞式I&#x2F;O模型，让JavaScript 运行在服务端的开发平台，\n它让JavaScript成为与PHP Python Perl、Ruby等服务端语言平起平坐的脚本语言\n\nnode 安装过程截图\n\n\n\n\n\n\n其实就是无脑下一步，选择目录的时候要注意一下就行了。\n1.1 测试是否安装成功node -v\nnpm -v\n\n解决npm查询不到版本号，方法一：https://past-taleggio-288.notion.site/node-24b6cf34d5c24186b7ef1ea7028b7fda\n1.2 配置环境变量\n配置环境过程\n在刚才安装nodejs的根目录下，创建node_global，node_cache文件夹\n\n以管理员身份-打开cmd，配置路径\nnpm config set prefix \"E:\\develop\\nodejs\\node_global\"\nnpm config set cache \"E:\\develop\\nodejs\\node_cache\"\n\n修改全局路径 node_global\n修改缓存路径 node_cache“”内路径需要根据自己实际情况来进行修改\n注意：修改全局安装路径后，需要在系统环境变量Path中添加该路径，否则之后使用npm install –global xxx，xxx都报错找不到命令。\n\n找到电脑环境配置\n\nwin10&amp;win11：右键此电脑-属性-高级系统设置-高级-环境变量\nwin11还可以：点设置-系统-关于-高级系统设置-高级-环境变量\n\n完成以上操作后，在用户变量中创建NODE_PATH变量，变量值为node_modeules路径地址\n\n在系统变量中选择Path添加如下属性：\n\n\n2 安装git官网https://git-scm.com/\n找到首页下方的Downloads\n下载对应系统（MAC、Windows、Linux&#x2F;Unix）安装包\n\n\n安装git过程\n找到下载的安装包（我下载的是windows系统的Git-2.34.1-64-bit.exe ），双击打开点击Next\n选择安装组件\n\n各个组件勾选含义 ：\n√  Additional icons On the Desktop:桌面添加图标\n√  Windows Explorer integration Git Bash Here&#x2F;Git GUI here:在windows资源管理器里集成Git Bash和Git GUI\n√  Git LFS（Large File Support）:Git大文件支持\n√  Associate .git* configuration files with the default text editor:将 .git* 配置文件与默认文本编辑器关联\n√  Associate .sh files to be run with Bash:关联要与 Bash 运行的 .sh 文件\n√  Check daily for Git for Windows updates:每日检查Windows版本的Git更新\n√  (NEW!)Add a Git Bash Profile to Windows Terminal:将Git Bash的配置文件添加在Windows终端中的配置文件中（这是2.34.1版本新增的功能，省去了自己额外单独添加）\n可以按照上述截图进行勾选，也可以自己根据组件含义进行勾选自己需要的组件，之后点击Next。\n\n调整新存储库中初始分支的名称\n选择区别：\n√  Let Git Decide:桌Git自己决定，当前默认是master。\n√  Override the default branch name for new repositories:自己填写默认分支，常用的有”main”、”truck”、”development”，在这里我选择main\n可以根据自己喜好选择初始名字，之后点击Next。\n\n选择ssh可执行文件\n\n\n选择’git pull’的默认行为\n\n行为介绍：\n√ Default:快进或者合并。\n√ Rebase:变基。\n√ Only ever fast-forward:只有快进。\n这个选择默认就行，之后点击 Next。\n\n配置实验选项\n\n正在开发的功能，小白不建议选择，之后点击Next。\n之后就等待安装完成就行了\n\n\n\n3 hexo 下载npm install hexo-cli -g #安装hexo\n\n4 检查安装node -v\n\nnpm -v\ngit --version\nhexo -v\n\n安装成功效果\n\n\n5 创建仓库及配置SSH连接5.1 创建github仓库利用github仓库，存放静态网站资源，达到挂载网站的目的\n需要注意的是作为网站访问的这个仓库，仓库名称一定是，拥有者名+github.io\n\n5.2 生成ssh keys在博客文件夹根目录下，右键，调用git bash here功能\n先输入ssh查看是否已经安装ssh，git默认有安装\n\n本地生成ssh keys\nssh-keygen -t rsa -C “邮箱地址”\n\n\n\n在本地电脑中找到.ssh文件夹\n\n\n一般默认都是，c\\Users\\用户名.ssh\n找到秘钥的位置，并用记事本打开，复制其内容(ctrl+a全选，ctrl+c复制，ctrl+v粘贴)\n\n打开github，头像箭头，下拉选项setting（设置）-SSH与GPG keys -new ssh keys（新建ssh秘钥）\n\n把在本地生成的秘钥内容粘贴至此秘钥处，标题可以随便取。\n\n为了后面流程，在github里顺便设置person access tokens（个人访问令牌）\n(与ssh选项同一列，下面选择Developer setting log  -Generate new token)\n\n下面勾选权限，建议全部勾选\n点击生成，生成的序列号，要复制下来在存在本地，他只显示一次，如果忘记了，还需要重新生成一次。\n\n测试ssh是否绑定成功（在git里操作）\nssh -T git@github.com\n如果问你（yes or no），直接yes就可以得到上面这段话\n\n6 搭建本地博客创建一个放置博客文件夹的文件，在里面启用git Bash here\n\n初始化hexo\n\nhexo init\n\n\n生成hexo本地页面\n\nhexo s\n\n\n\n浏览器复制粘贴该地址，即可访问本地搭建的博客\n\nhexo clean： #清理编译文件\nhexo g：#编译项目\nhexo s(server) : #本地预览运行项目\n\n7 上传至本地博客至GitHub7.1 修改配置文件在创建博客文件夹的根目录下修改-config.yml文件\n\n\ndeploy:\n  type: git\n  repository: 你的github地址\n  branch: main\n\n7.2 安装hexo-deployer-git 自动部署发布工具npm install hexo-deployer-git --save \n\n\n7.3 编译文件生成页面hexo g\n\n\n7.4 本地文件上传到Githubhexo d\n\n\n\n特别注意在上传时，浏览器会跳出关于github的验证,要耐心等候\n\n输入用户名\n\n输入令牌\n\n(就是在github生成的那个，切记要保存)\n\n\n成功后\n\n可以直接访问仓库名如，sxlz-jack.github.io\n\n\n8 安装Aurora主题\n安装Aurora主题过程\n8.1 配置npm install hexo-theme-aurora --save #进入hexo初始化目录用git执行\n\n\n\n因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以我们需要自己创建一个配置文件。你只需要在 Hexo 博客的根目录下创建一个_config.aurora.yml 配置文件来配置主题\n\n此时打开配置文件发现是空的我们可以到node_modules下找到hexo-theme-aurora\n\n8.2 修改配置打开_comfig.yml\n由默认主题改为Aurora\n\n由于Aurora是vue3项目\n打开根目录下的_config.yml\n修改路由方式\n\n运行\nhexo clean &amp; hexo g &amp; hexo server\n\n\n\n8.3 上传并覆盖GitHub仓库hexo d\n\n\n打开仓库地址  主题配置成功\n\n\n\n9 参考教程Aurora主题安装: https://blog.nicely.fun/post/Hexo-Aurora-Cos-CDN\nhexo+github搭建个人博客：https://wushishu.xyz/post/be8880ea.html\n保姆级hexo+github搭建个人博客：https://www.bilibili.com/video/BV1mU4y1j72n?p=1&vd_source&#x3D;6e1e9ccd3b56d44ab6e49e2b16537391\ngithub怎么绑定自己的域名：https://www.likecs.com/show-30474.html\n博客搭建日志：https://dhndzwxj.vercel.app/3276806131.html\n主题官方文档：https://aurora.tridiamond.tech/zh/guide/getting-started.html#%E4%BE%9D%E8%B5%96%E7%8E%AF%E5%A2%83\n","slug":"hexo-aurora-github搭建","date":"2022-07-15T09:25:14.000Z","categories_index":"","tags_index":"博客搭建","author_index":"叁鄉浪子"},{"id":"ff7f77d8849acded293624642c2f6f53","title":"github仓库绑定自定义域名/子域名","content":"\n\n\n\n\n\n\n注意\n先要有个自己域名\n\n准备域名嫌以后配置麻烦的，最好选择一家全功能服务商国内的腾讯云   阿里云是首推当然仅仅域名服务商来说，国外也有很多，可以看你需求，选择一个。然后购买自己心仪的域名\n\n解析子域名（腾讯云为例）在管理解析域名功能里，选择顶级域名（xxx.com、xxx.cn），解析时，添加记录，记录类型为A，主机记录填，子域名的多顶级域名多出来的部分 如：wr.bai.com ，此处主机记录就填wr，记录值就需要填写，服务器的IP地址，其他配置均默认，添加成功后。\n\n测试子域名是否生效，可以ping子域名，看是否返回源站IP。\n解析GitHub.io在相应的仓库下，创建一个名为CHAME文件，文件内容填写，你要指向的域名(不要包含http和www)\n进入设置\n点击左栏的pages，添加域名后保存即可（添加CNAME文件并在文件中填写绑定的域名后应该会自动保存，看看有没有自动保存）\n\n绑定解析无论是顶级域名，子域名，添加解析记录，主机记录填写@，记录类型CHAME，记录值就填写仓库的名字如（xxx.github.io），还需多加一个主机记录www的，其他配置不变，保存即可。\n\n测试是否成功浏览器URL处输入你需要指向的域名，看是否跳转至仓库网站内容。\n","slug":"github仓库绑定自定义域名","date":"2022-07-20T08:45:12.000Z","categories_index":"","tags_index":"博客搭建","author_index":"叁鄉浪子"},{"id":"c484c66ce03bad960ae3b5881ebf399e","title":"欢迎来到 致彩之镜","content":"\n\n\n\n\n\n\n注意\n新站点\n\n新特性\n\n基于hexo博客新框架\n静态存储在Github仓库上\nhexo框架下的 Aurora主题\n该主题基于vue3开发\n相对于WordPress来说，在写文章上更贴近写代码\n\n\n站点的用途\n内容偏向写教程\n体验新框架的编辑发布流程\n提高自己的折腾能力\n\n其他有可能的话，后续还搭建几个工具站，如云盘，图床，在线工具等。目前懒书负责学习，生活记录，致彩负责折腾过程记录，毕竟某些教程发布在已经备案的站点里不太适合。\n","slug":"欢迎来到致彩之镜","date":"2022-07-15T09:25:14.000Z","categories_index":"","tags_index":"博客搭建","author_index":"叁鄉浪子"},{"id":"5e4cfdd2ded92ee3ea8874c2fc42ba20","title":"你好，世界！","content":"欢迎来到Hexo！这是你的第一篇帖子。查看文档了解更多信息。如果您在使用Hexo时遇到任何问题，可以在疑难解答中找到答案，也可以在GitHub上问我。\n快速上手创建新文章$ hexo new \"My New Post\"\n关于更多: 写作\n设置文章封面$ 文章里添加cover: 你的图片链接 （记得冒号后面有空格）\"\n运行$ hexo server\n\n关于更多: 服务器\n生成静态文件$ hexo generate\n\n关于更多: 生成\n部署至远程站点$ hexo deploy\n\n关于更多: 部署\n","slug":"hello-world","date":"2022-07-11T03:20:40.742Z","categories_index":"","tags_index":"","author_index":"叁鄉浪子"}]